{
  "_format": "hh3-sol-build-info-1",
  "id": "solc-0_8_18-d88f9559171af6fcd066f16348f0c148a7a26ccc",
  "solcVersion": "0.8.18",
  "solcLongVersion": "0.8.18+commit.87f61d96",
  "userSourceNameMap": {
    "contracts/CampusCredits.sol": "project/contracts/CampusCredits.sol"
  },
  "input": {
    "language": "Solidity",
    "settings": {
      "evmVersion": "paris",
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "": [
            "ast"
          ],
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ]
        }
      },
      "remappings": []
    },
    "sources": {
      "project/contracts/CampusCredits.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\ncontract CampusCredits {\n    address public admin;\n    mapping(address => uint256) public balanceOf;\n\n    event CreditsMinted(address indexed to, uint256 amount, string reason, uint256 timestamp);\n\n    modifier onlyAdmin() {\n        require(msg.sender == admin, \"Only admin\");\n        _;\n    }\n\n    constructor(address _admin) {\n        admin = _admin;\n    }\n\n    // Admin mints credits to a student's wallet address\n    function mintCredits(address to, uint256 amount, string calldata reason) external onlyAdmin {\n        require(to != address(0), \"Invalid address\");\n        require(amount > 0, \"Amount must be > 0\");\n        balanceOf[to] += amount;\n        emit CreditsMinted(to, amount, reason, block.timestamp);\n    }\n}\n"
      }
    }
  }
}